name: Deploy OTA Package to ThingsBoard

on:
  repository_dispatch:
    types:
      - trigger-ota
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      THINGSBOARD_URL: ${{ secrets.THINGSBOARD_URL }}
      TB_USERNAME: ${{ secrets.TB_USERNAME }}
      TB_PASSWORD: ${{ secrets.TB_PASSWORD }}
      DEVICE_PROFILE_ID: "68c1c3f0-9905-11ef-af50-911365b0425f"

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Download APK artifact from Flutter CI
      - name: Download APK Artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: Flutter CI
          repository: your-org/flutter-repo
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          name: flutter-apk
          path: ./flutter-apk

      # Download Linux artifact from Flutter CI
      - name: Download Linux Desktop Artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: Flutter CI
          repository: your-org/flutter-repo
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          name: flutter-linux-app
          path: ./flutter-linux-app

      # Use artifacts in your OTA package
      - name: Package application for OTA
        run: |
          zip -r ota_package.zip ./flutter-apk/app-release.apk ./flutter-linux-app/*

      - name: Upload OTA package artifact
        uses: actions/upload-artifact@v3
        with:
          name: ota_package
          path: ota_package.zip

      - name: Authenticate to ThingsBoard
        id: tb_login
        run: |
          response=$(curl -s -X POST "$THINGSBOARD_URL/api/auth/login" \
            -H "Content-Type: application/json" \
            -d '{"username": "'"$TB_USERNAME"'", "password": "'"$TB_PASSWORD"'"}')
          token=$(echo "$response" | jq -r '.token')
          echo "TB_TOKEN=$token" >> $GITHUB_ENV

      - name: Create OTA Package in ThingsBoard
        env:
          TB_TOKEN: ${{ env.TB_TOKEN }}
        run: |
          response=$(curl -s -X POST "$THINGSBOARD_URL/api/otaPackage" \
            -H "X-Authorization: Bearer $TB_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                  "title":"Python et TRT Update",
                  "version":"'"$TAG-$VERSION"'",
                  "tag":"'"$TAG"'",
                  "type":"SOFTWARE",
                  "deviceProfileId": {
                    "entityType":"DEVICE_PROFILE",
                    "id":"'"$DEVICE_PROFILE_ID"'"
                  },
                  "isURL":false,
                  "additionalInfo": {
                    "description":"Release '"$TAG"' (commit: '"$VERSION"')"
                  }
                }')
          ota_package_id=$(echo "$response" | jq -r '.id.id')
          echo "OTA_PACKAGE_ID=$ota_package_id" >> $GITHUB_ENV

      - name: Upload OTA Content
        env:
          TB_TOKEN: ${{ env.TB_TOKEN }}
          OTA_PACKAGE_ID: ${{ env.OTA_PACKAGE_ID }}
        run: |
          curl -X POST "$THINGSBOARD_URL/api/otaPackage/$OTA_PACKAGE_ID?checksumAlgorithm=SHA256" \
            -H "X-Authorization: Bearer $TB_TOKEN" \
            -F "file=@ota_package.zip" \
            -H "Content-Type: multipart/form-data"

      - name: Configure Devices
        env:
          TB_TOKEN: ${{ env.TB_TOKEN }}
        run: |
          response=$(curl -s -X POST "$THINGSBOARD_URL/api/deviceProfile/$DEVICE_PROFILE_ID/otaPackage" \
            -H "X-Authorization: Bearer $TB_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                  "otaPackageId": "'"$OTA_PACKAGE_ID"'",
                  "version": "'"$TAG-$VERSION"'"
                }')
          echo $response
